#include <iostream>
using namespace std;

bool isSubsetPresent(int *arr, int n, int sum)
{
    bool** dp = new bool*[n+1];
    for(int i=0;i<=n;i++)
    {
        dp[i] = new bool[sum+1];
    }
    for(int i=0;i<=sum;i++)
    {
        dp[0][i] = false;
    }
    for(int j=0;j<=n;j++)
    {
        dp[j][0] = true;
    }
    for(int i=1;i<=n;i++)
    {
        for(int j=1;j<=sum;j++)
        {
            dp[i][j] = dp[i-1][j];
        
        	if(j>= arr[i-1])
       	 	{
            	dp[i][j] = dp[i][j] || dp[i-1][j-arr[i-1]];
        	}
        }
    }
    return dp[n][sum];
}

int main()
{
    int n, sum;
    cin >> n;

    int *arr = new int[n];

    for (int i = 0; i < n; i++)
    {
        cin >> arr[i];
    }

    cin >> sum;

    if (isSubsetPresent(arr, n, sum))
    {
        cout << "Yes";
    }
    else
    {
        cout << "No";
    }

    delete[] arr;
}
